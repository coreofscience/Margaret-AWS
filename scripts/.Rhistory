library(tidyverse)
library(rvest)
library(here)
library(openxlsx)
library(scholar)
library(stringi)
source(here("scripts",
"data_getting.R"))
source(here("scripts",
"data_cleaning.R"))
source(here("scripts",
"data_tidying.R"))
source(here("scripts/data_analysis_descriptive.R"))
eval(parse("scripts/functions.R", encoding = "UTF-8"))
# Data outside
grupos <- read_csv("https://docs.google.com/spreadsheets/d/1gBaXHFp1NTUTeXodb4JyHqY-P-AWV5yN5-p4L1O09gk/export?format=csv&gid=0") |>
mutate(grupo = str_to_upper(grupo),
grupo = stri_trans_general(str = grupo,
id = "Latin-ASCII"))
researchers <- read_csv("https://docs.google.com/spreadsheets/d/1gBaXHFp1NTUTeXodb4JyHqY-P-AWV5yN5-p4L1O09gk/export?format=csv&gid=347194763") |>
unique() |>
mutate(researcher = str_to_upper(researcher),
researcher = stri_trans_general(str = researcher,
id = "Latin-ASCII")) |>
mutate(h_index = map(id_scholar, safely(get_profile))) |>
unnest_wider(h_index) |>
unnest_wider(result) |>
select(researcher, id_scholar, h_index) |>
mutate(h_index = if_else(is.na(h_index), 0, h_index))
grupo_df <- data_getting_ucla(grupos)
produccion_grupos <- data_cleaning_ucla(grupo_df)
source(here("scripts",
"report.R"))
articulos_unicos <- data_tidying_ucla(produccion_grupos)
national_journals <- read_csv(here("output",
"journals_2016_2020.csv"))
national_journals <- transform(national_journals, ano=as.character(ano))
articulos <- articulos_unicos |>
mutate(ISSN = str_remove(ISSN, "-"))|>
left_join(national_journals, by =c("ISSN", "ano")) |>
select(1:7,16,8:14)
articulos_unicos <- articulos
produccion_actualizada <- produccion_grupos
produccion_actualizada[[2]][["articulos"]]<- articulos_unicos
produccion_actualizada[[2]][["Eliminados_por_grupo"]] <- df_eliminados_total
produccion_actualizada[[2]][["Similares_entre_grupo"]] <- df_similares_total_grupos
shiny_data <- data_analysis_descriptive_ucla(produccion_actualizada)
export_csv(shiny_data)
library(flexdashboard)
library(tidyverse)
library(here)
library(DT)
library(plotly)
library(readxl)
library(shiny)
library(crosstalk)
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv")) |>
filter(ano >= 2016,
ano <=2020)
grupos_general <-
read_csv(here("output",
"grupos_general.csv"))
investigadores_general <-
read_csv(here("output",
"investigadores.csv"))
grupos_inves <-
read_csv(here("data",
"grupos.csv"))
grupos_indi <- read_csv(here("data",
"df_researcher.csv"))
filename <-here("output","grupos_produccion.xlsx")
sheets <- openxlsx::getSheetNames(filename)
produccion_grupos <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=filename)
names(produccion_grupos) <- sheets
grupos_produccion_articulos <- read_xlsx(here("output","grupos_produccion.xlsx"),
sheet = "articulos")
View(investigadores_general)
View(investigadores_general)
investigadores_general
View(investigadores_general)
investigadores_general |>
mutate(url = str_c("<a href=","\"",
url,
"\"",
">Link</a>"),
scholar = str_c("<a href=","\"",
"https://scholar.google.com/citations?user=",
id_scholar,
"\"",
">Scholar</a>")) |>
select(-vinculacion,
-fin_vinculacion)
View(investigadores_general)
investigadores_general |>
mutate(url = str_c("<a href=","\"",
url,
"\"",
">Link</a>"),
scholar = str_c("<a href=","\"",
"https://scholar.google.com/citations?user=",
id_scholar,
"\"",
">Scholar</a>")) |>
select(-vinculacion,
-fin_vinculacion) |>
rename(Investigador = integrantes,
Produccion = total_papers,
Horas = horas_dedicacion,
CvLAC = url,
Grupo = grupo,
Inicio = inicio_vinculacion,
Formacion = posgrade,
) |>
select(Investigador,
Produccion,
h_index,
Formacion,
Grupo,
Inicio,
CvLAC,
scholar) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Investigador", "Categoria", "ProducciÃ³n", "H index", "FormaciÃ³n",
"Grupo", "Inicio", "CvLAC", "Scholar"))
investigadores_general |>
mutate(url = str_c("<a href=","\"",
url,
"\"",
">Link</a>"),
scholar = str_c("<a href=","\"",
"https://scholar.google.com/citations?user=",
id_scholar,
"\"",
">Scholar</a>")) |>
select(-vinculacion,
-fin_vinculacion) |>
rename(Investigador = integrantes,
Produccion = total_papers,
Horas = horas_dedicacion,
CvLAC = url,
Grupo = grupo,
Inicio = inicio_vinculacion,
Formacion = posgrade,
) |>
select(Investigador,
Produccion,
h_index,
Formacion,
Grupo,
Inicio,
CvLAC,
scholar) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Investigador", "Categoria", "ProducciÃ³n", "H index", "FormaciÃ³n",
"Grupo", "Inicio", "CvLAC", "Scholar"))
articulos_unicos_2016_2020 |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
Link,
"\"",
">DOI</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "CategorÃ­a", "Tipo producto",
"TÃ­tulo", "PaÃ­s revista", "Revista",
"ISSN", "AÃ±o", "Volumen", "Fasc",
"Paginas", "DOI", "Autores"))
articulos_unicos_2016_2020 |>
select(-id) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">link</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "CategorÃ­a", "Tipo producto",
"TÃ­tulo", "PaÃ­s revista", "Revista",
"ISSN", "AÃ±o", "Volumen", "Fasc",
"Paginas", "DOI", "Autores"))
View(grupos_indi)
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n())
View(data4)
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica)
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n()) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(m = m ())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n()) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = m ())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n()) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n ())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica)
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n()) |>
group_by(ultima_formacion_academica) |>
summarise(m = m())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria) |>
summarise(n = n()) |>
group_by(ultima_formacion_academica)
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica) |>
summarise(n = n())
data4 <- grupos_indi |> select(grupo , categoria, ultima_formacion_academica) |>
group_by(grupo, categoria, ultima_formacion_academica)
data4 <- grupos_indi |> select(grupo , categoria) |>
group_by(grupo, categoria) |>
summarise(n = n())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n())
View(data5)
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(m = m())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(n = m)
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n)
merge(x = data4, y = data5)
data6 <- merge(x = data4, y = data5)
View(data6)
data6 <- merge(x = data4, y = data5, by = c("grupo"))
View(data4)
View(data5)
data6 <- merge(x = data5, y = data4, by = c("grupo"))
data4 <- grupos_indi |> select(grupo , categoria) |>
group_by(grupo, categoria) |>
summarise(n = n())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n)
data6 <- merge(x = data5, y = data4, by = c("grupo"))
datos_compartidos <- crosstalk::SharedData$new(data6)
filter_select("categoria", "Grupo", datos_compartidos, ~grupo)
p0 <- datos_compartidos |>
plot_ly(labels= ~ultima_formacion_academica, values=~m, type = 'pie')
p0 <- p0 %>% layout(title = 'Categorias',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p0
data6 <- merge(x = data5, y = data4)
data6 <- merge(x = data5, y = data4, all = TRUE)
data6 <- merge(x = data5, y = data4, all.x = TRUE)
data6 <- merge(x = data5, y = data4, all.y = TRUE)
a
data6 <- merge(x = data5, y = data4, by = "grupos", all = TRUE)
data6 <- merge(data5, data4, by = "grupos", all = TRUE)
data6 <- merge(data5, data4, by = c("grupos"), all = TRUE)
data6 <- merge(data5, data4, all = TRUE)
data6[duplicated(data6)]
data6 <- merge(data5, data4, by = NULL)
head(data6)
data6 <- merge(data5, data4, by = 0, all = TRUE)
data6 <- select(-row.names)
data6 <- merge(data5, data4, by = 0, all = TRUE)
View(data4)
View(data5)
View(data4)
data4 <- grupos_indi |> select(grupo , categoria) |>
group_by(grupo, categoria) |>
summarise(n = n())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n)
data6 <- merge(data5, data4, by = 0, all = TRUE)
datos_compartidos <- crosstalk::SharedData$new(data6)
filter_select("categoria", "grupo.x", datos_compartidos, ~grupo)
data4 <- grupos_indi |> select(grupo , categoria) |>
group_by(grupo, categoria) |>
summarise(n = n())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n)
data6 <- merge(data5, data4, by = 0, all = TRUE)
datos_compartidos <- crosstalk::SharedData$new(data6)
filter_select("categoria", "Grupo", datos_compartidos, ~grupo.x)
View(data5)
View(data4)
View(data4)
View(grupos_produccion_articulos)
View(articulos_unicos_2016_2020)
library(flexdashboard)
library(tidyverse)
library(here)
library(DT)
library(plotly)
library(readxl)
library(shiny)
library(crosstalk)
data7 <- articulos_unicos_2016_2020 |>
select(categoria, ano, grupo) |>
count(ano, grupo, sort = FALSE, name = "producciones")
View(data7)
data6 <- merge(data5, data4, by = c("grupo", "categoria"), all = TRUE)
View(data6)
rm(data6)
rm(data4,data5,matriz,data6)
data4 <- grupos_indi |> select(grupo , categoria) |>
group_by(grupo, categoria) |>
summarise(n = n())
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n,
formacion = ultima_formacion_academica)
matriz <- matrix(NA, nrow = 5, ncol = 3)
matriz <- data.frame(matriz) |>
rename(grupo = X1,
formacion = X2,
m = X3)
data5 <- rbind(data5, matriz) |>
rename(categoria = 2)
data6 <- merge(data5, data4, by = c("grupo", "categoria"), all = TRUE)
View(data6)
View(matriz)
View(data4)
View(data5)
data5 <- grupos_indi |> select(grupo , ultima_formacion_academica) |>
group_by(grupo, ultima_formacion_academica) |>
summarise(n = n()) |>
rename(m = n,
formacion = ultima_formacion_academica)
View(grupos_indi)
View(grupos_general)
View(articulos_unicos_2016_2020)
library(flexdashboard)
library(tidyverse)
library(here)
library(DT)
library(plotly)
library(readxl)
library(shiny)
library(crosstalk)
library(stringi)
articulos_unicos_2016_2020 |>
select(-id, -tipo_producto) |>
mutate(DOI = str_extract(DOI, "\\d.*")) |>
mutate(DOI =  str_c("<a href=","\"",
"https://doi.org/",
DOI,
"\"",
">Enlace</a>")) |>
datatable(options = list(pageLength = 15),
escape = FALSE,
colnames = c("Grupo", "Categoria",
"TÃ­tulo", "PaÃ­s revista", "Revista",
"ISSN","CasiflicaciÃ³n Revista", "AÃ±o", "Volumen",
"Fasc","Paginas", "Enlace artÃ­culo", "Autores"))
library(tidyverse)
library(rvest)
library(here)
library(openxlsx)
library(scholar)
library(stringi)
source(here("scripts",
"data_getting.R"))
source(here("scripts",
"data_cleaning.R"))
source(here("scripts",
"data_tidying.R"))
source(here("scripts/data_analysis_descriptive.R"))
eval(parse(here("scripts/functions.R"), encoding = "UTF-8"))
# Data outside
grupos <- read_csv("https://docs.google.com/spreadsheets/d/1gBaXHFp1NTUTeXodb4JyHqY-P-AWV5yN5-p4L1O09gk/export?format=csv&gid=0") |>
mutate(grupo = str_to_upper(grupo),
grupo = stri_trans_general(str = grupo,
id = "Latin-ASCII"))
researchers <- read_csv("https://docs.google.com/spreadsheets/d/1gBaXHFp1NTUTeXodb4JyHqY-P-AWV5yN5-p4L1O09gk/export?format=csv&gid=347194763") |>
unique() |>
mutate(researcher = str_to_upper(researcher),
researcher = stri_trans_general(str = researcher,
id = "Latin-ASCII")) |>
mutate(h_index = map(id_scholar, safely(get_profile))) |>
unnest_wider(h_index) |>
unnest_wider(result) |>
select(researcher, id_scholar, h_index) |>
mutate(h_index = if_else(is.na(h_index), 0, h_index))
grupo_df <- data_getting_ucla(grupos)
produccion_grupos <- data_cleaning_ucla(grupo_df)
source(here("scripts",
"report.R"))
articulos_unicos <- data_tidying_ucla(produccion_grupos)
national_journals <- read_csv(here("output",
"journals_2016_2020.csv"))
national_journals <- transform(national_journals, ano=as.character(ano))
articulos <- articulos_unicos |>
mutate(ISSN = str_remove(ISSN, "-"))|>
left_join(national_journals, by =c("ISSN", "ano")) |>
select(1:7,16,8:14)
articulos_unicos <- articulos
produccion_actualizada <- produccion_grupos
produccion_actualizada[[2]][["articulos"]]<- articulos_unicos
produccion_actualizada[[2]][["Eliminados_por_grupo"]] <- df_eliminados_total
produccion_actualizada[[2]][["Similares_entre_grupo"]] <- df_similares_total_grupos
shiny_data <- data_analysis_descriptive_ucla(produccion_actualizada)
export_csv(shiny_data)
library(flexdashboard)
library(tidyverse)
library(here)
library(DT)
library(plotly)
library(readxl)
library(shiny)
library(crosstalk)
library(stringi)
articulos_unicos_2016_2020 <-
read_csv(here("output",
"articulos.csv")) |>
filter(ano >= 2016,
ano <=2020)
capitulos_2016_2020 <-
read_csv(here("output",
"capitulos.csv")) |>
filter(ano >= 2016,
ano <=2020)
libros_2016_2020 <-
read_csv(here("output",
"libros.csv")) |>
filter(Ano >= 2016,
Ano <=2020)
software_2016_2020 <-
read_csv(here("output",
"softwares.csv")) |>
filter(ano >= 2016,
ano <=2020)
trabajo_2016_2020 <-
read_csv(here("output",
"trabajos_dirigidos.csv")) |>
mutate(hasta = str_remove(hasta, ".* "),
hasta = str_trim(hasta),
desde = str_remove(desde, "\\d.* "),
desde = str_trim(desde)) |>
filter(desde >= 2016,
hasta <=2020)
innovacion_2016_2020 <-
read_csv(here("output",
"innovaciones_gestion.csv")) |>
filter(ano >= 2016,
ano <=2020)
grupos_general <-
read_csv(here("output",
"grupos_general.csv"))
investigadores_general <-
read_csv(here("output",
"investigadores.csv"))
View(articulos_unicos_2016_2020)
View(shiny_data)
View(shiny_data[["grupo_product_cleaned"]][["articulos"]])
